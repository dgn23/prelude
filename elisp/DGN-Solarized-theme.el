(deftheme DGN-Solarized
  "Created 2015-06-14. Solarized base with a few additional tweaks. ")

(custom-theme-set-faces
 'DGN-Solarized
 '(default ((t (:family "Myriad Pro" :foundry "nil" :width normal :height 130 :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :foreground "#839496" :background "#002b36" :stipple nil :inherit nil))))
 '(cursor ((t (:background "#839496" :foreground "#002b36"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((t (:family "Sans Serif"))))
 '(escape-glyph ((t (:weight bold :foreground "#F0DFAF"))))
 '(minibuffer-prompt ((t (:foreground "#2aa191" :weight bold))))
 '(highlight ((t (:background "#073642"))))
 '(region ((t (:inverse-video t :weight unspecified :background "#002b36" :foreground "#586e75"))))
 '(shadow ((t (:foreground "#586e75"))))
 '(secondary-selection ((t (:background "#073642"))))
 '(trailing-whitespace ((t (:inverse-video t :foreground "#dc322f" :background "#CC9393"))))
 '(font-lock-builtin-face ((t (:weight bold :foreground "#859900"))))
 '(font-lock-comment-delimiter-face ((t (:foreground "#586e75" :slant italic))))
 '(font-lock-comment-face ((t (:foreground "#586e75" :slant italic))))
 '(font-lock-constant-face ((t (:foreground "#2aa198"))))
 '(font-lock-doc-face ((t (:foreground "#586e75" :slant italic))))
 '(font-lock-function-name-face ((t (:foreground "#268bd2"))))
 '(font-lock-keyword-face ((t (:weight bold :foreground "#859900"))))
 '(font-lock-negation-char-face ((t (:weight bold :foreground "#dc322f"))))
 '(font-lock-preprocessor-face ((t (:foreground "#cb4b16"))))
 '(font-lock-regexp-grouping-backslash ((t (:weight bold :foreground "#b58900"))))
 '(font-lock-regexp-grouping-construct ((t (:weight bold :foreground "#cb4b16"))))
 '(font-lock-string-face ((t (:foreground "#2aa198"))))
 '(font-lock-type-face ((t (:foreground "#b58900"))))
 '(font-lock-variable-name-face ((t (:foreground "#268bd2"))))
 '(font-lock-warning-face ((t (:foreground "#dc322f" :weight bold))))
 '(button ((t (:weight semi-bold :underline (:color foreground-color :style line)))))
 '(link ((t (:foreground "PaleVioletRed2" :underline t :weight bold))))
 '(link-visited ((t (:foreground "light green" :underline t :weight normal))))
 '(fringe ((t (:background "#073642" :foreground "#586e75"))))
 '(header-line ((t (:box (:line-width -1 :color nil :style released-button) :inverse-video t :foreground "#839496" :background "#073642"))))
 '(tooltip ((t (:background "#FDF6E3" :foreground "black"))))
 '(mode-line ((t (:background "#286EE1" :foreground "#93A1A1" :inverse-video t :box nil :weight semi-bold))))
 '(mode-line-buffer-id ((t (:weight bold :foreground "#93A1A1"))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color "grey40" :style released-button))) (t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:box nil :inverse-video t :weight unspecified :background "#073642" :foreground "#657b83"))))
 '(isearch ((t (:weight bold :inverse-video t :foreground "plum1" :background "#002b36"))))
 '(isearch-fail ((t (:foreground "#DCDCCC" :background "#8C5353" :inherit (error)))))
 '(lazy-highlight ((t (:weight bold :foreground "#D0BF8F" :background "#383838" :inherit (match)))))
 '(match ((t (:weight bold :inverse-video t :foreground "#b58900" :background "#2B2B2B"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(powerline-active1 ((t (:foreground "#657b83" :background "#383838" :inherit (sml/global)))))
 '(powerline-active2 ((t (:foreground "#839496" :background "#5F5F5F" :inherit (sml/global)))))
 '(powerline-inactive1 ((t (:inherit (mode-line-inactive) :background "#93a1a1" :foreground "#073642"))))
 '(powerline-inactive2 ((t (:foreground "#586e75" :background "#6F6F6F" :inherit (mode-line-inactive)))))
 '(org-headline-done ((t (:foreground "#586e75"))))
 '(org-latex-and-related ((t (:foreground "#cb4b16"))))
 '(org-level-1 ((t (:height 1.5 :foreground "#DFAF8F" :inherit (outline-1)))))
 '(org-level-2 ((t (:height 1.2 :foreground "#BFEBBF" :inherit (outline-2)))))
 '(org-level-3 ((t (:height 1.1 :foreground "#7CB8BB" :inherit (outline-3)))))
 '(org-level-4 ((t (:height 1.1 :foreground "PaleVioletRed4" :inherit (outline-4)))))
 '(org-level-5 ((t (:height 1.1 :foreground "#93E0E3" :inherit (outline-5)))))
 '(org-level-6 ((t (:height 1.15 :foreground "#9FC59F" :inherit (outline-6)))))
 '(org-level-7 ((t (:height 1.1 :foreground "#8C5353" :inherit (outline-7)))))
 '(org-level-8 ((t (:height 1.05 :foreground "#4C7073" :inherit (outline-8)))))
 '(sml/battery ((t (:foreground "Red" :inherit (sml/global)))))
 '(sml/charging ((t (:foreground "ForestGreen" :inherit (sml/global)))))
 '(sml/client ((t (:inherit (sml/prefix)))))
 '(sml/filename ((t (:weight bold :inherit (sml/global)))))
 '(sml/folder ((t (:weight normal :inherit (sml/global)))))
 '(sml/minor-modes ((t (:inherit (sml/global)))))
 '(sml/time ((t (:weight normal :foreground "plum1" :background "black" :inherit (sml/global)))))
 '(sml/vc ((t (:inherit (sml/git)))))
 '(sml/vc-edited ((t (:inherit (sml/prefix)))))
 '(egg-branch ((t (:foreground "#F0DFAF"))))
 '(font-latex-sectioning-0-face ((t (:inherit (font-latex-sectioning-1-face) :height 1.25))))
 '(font-latex-sectioning-1-face ((t (:inherit (font-latex-sectioning-2-face) :height 1.25))))
 '(font-latex-sectioning-2-face ((t (:inherit (font-latex-sectioning-3-face) :height 1.25))))
 '(font-latex-sectioning-3-face ((t (:inherit (font-latex-sectioning-4-face) :height 1.25))))
 '(font-latex-sectioning-4-face ((t (:inherit (font-latex-sectioning-5-face) :height 1.25))))
 '(font-latex-sectioning-5-face ((t (:weight bold :foreground "#6c71c4"))))
 '(org-todo ((t (:background "#dc322f" :foreground "#002b36" :weight bold))))
 '(org-done ((t (:foreground "#859900" :weight bold)))))

(provide-theme 'DGN-Solarized)
